var app=angular.module("evaluationApp",["ngRoute"]);app.config(["$routeProvider","$sceDelegateProvider",function(a,b){a.when("/",{templateUrl:"src/Views/login.html",controller:"LoginController"}).when("/admin",{templateUrl:"src/Views/admin.html",controller:"AdminController"}).when("/createeval",{templateUrl:"src/Views/create-eval.html",controller:"CreateEvalController"}).when("/student",{templateUrl:"src/Views/student.html",controller:"StudentController"}).when("/answereval/:courseID/:semester/:evalID",{templateUrl:"src/Views/answer-eval.html",controller:"AnswerEvalController"}).when("/evalresults/:courseID/:semester/:evalID",{templateUrl:"src/Views/eval-results.html",controller:"EvalResultsController"}).otherwise({redirectTo:"/"}),b.resourceUrlWhitelist(["self","http://dispatch.hir.is/api/**"])}]),angular.module("evaluationApp").controller("AdminController",["$scope","$location","$filter","UserService","TemplateService",function(a,b,c,d,e){a.templates=[],a.resultMsg="",a.evaluations=[],a.courses=[],e.getTemplates().success(function(b){a.templates=b}).error(function(b,c,d){console.log("Get templates error, status: "+c+", Headers:"),console.log(d),a.resultMsg="Error, could not fetch any templates"}),e.getEvaluations().success(function(b){a.evaluations=b}),a.createEval=function(){b.path("/createeval")},a.addTemplate=function(){var b=c("date")(a.startDate,"yyyy-MM-ddTHH:mm:ss.sssZ","GMT"),d=c("date")(a.endDate,"yyyy-MM-ddTHH:mm:ss.sssZ","GMT");console.log("Template ID: "+a.templateID),console.log("Start date formatted: "+b),console.log("End date formatted: "+d),e.addEvaluation(a.templateID,b,d).success(function(){console.log("Successfully added a template.."),a.resultMsg="Evaluations successfully added"}).error(function(b,c,d){console.log("Login error, status: "+c+", Headers:"),console.log(d),a.resultMsg="Error, unable to add evaluation"})},a.getEvaluationResults=function(){e.getEvaluationByID(a.evalID).success(function(b){console.log("Got the evaluations.."),console.log(b),a.courses=b.Courses})}}]),angular.module("evaluationApp").controller("AnswerEvalController",["$scope","$location","$routeParams","TemplateService",function(a,b,c,d){a.evaluation={},a.evaluationAnswers=[],a.teachers=[],a.courseAnswers=[],a.teacherAnswers={};var e=c.courseID,f=c.semester,g=c.evalID;console.log("Course ID "+e+", semester: "+f+", evalID: "+g),d.getEvaluationForCourseByEvalID(e,f,g).success(function(b){console.log("RECEIVED EVALUATION: "),console.dir(b),a.evaluation=b}).success(function(){d.getTeachersForCourse(e,f).success(function(b){console.log("Course questions: "),console.dir(a.evaluation.CourseQuestions),console.log("RECEIVED TEACHERS: "),console.dir(b),a.teachers=b;for(var c=0;c<a.teachers.length;c++)a.teacherAnswers[a.teachers[c].SSN]=[]})}),a.saveEval=function(){for(var c=[],h=0;h<a.courseAnswers.length;h++)c.push({QuestionID:a.courseAnswers[h].QuestionID,Value:a.courseAnswers[h].Value});for(var i in a.teacherAnswers)for(h=0;h<a.teacherAnswers[i].length;h++)c.push({TeacherSSN:i,QuestionID:a.teacherAnswers[i][h].QuestionID,Value:a.teacherAnswers[i][h].Value});console.log("All answers"),console.dir(c),d.saveAnswersToEvaluationInCourse(e,f,g,c).success(function(){console.log("Answers to evaluation successfully saved.."),b.path("/student")})}}]),angular.module("evaluationApp").controller("CreateEvalController",["$scope","$location","UserService","TemplateService",function(a,b,c,d){a.questions={CourseQuestions:[],TeacherQuestions:[]},a.courseQuestionType="",a.teacherQuestionType="",a.addQuestion=function(b){0===b?"text"!==a.courseQuestionType?(console.log("not text"),a.questions.CourseQuestions.push({Index:a.questions.CourseQuestions.length,Text:"",TextEN:"",ImageURL:"",Type:a.courseQuestionType,Answers:[]})):(console.log("text"),a.questions.CourseQuestions.push({Index:a.questions.CourseQuestions.length,Text:"",TextEN:"",ImageURL:"",Type:a.courseQuestionType})):1===b&&("text"!==a.teacherQuestionType?(console.log("not text"),a.questions.TeacherQuestions.push({Index:a.questions.TeacherQuestions.length,Text:"",TextEN:"",ImageURL:"",Type:a.teacherQuestionType,Answers:[]})):(console.log("text"),a.questions.TeacherQuestions.push({Index:a.questions.TeacherQuestions.length,Text:"",TextEN:"",ImageURL:"",Type:a.teacherQuestionType})))},a.addAnswer=function(b,c){0===c?a.questions.CourseQuestions[b].Answers.push({Text:"",TextEN:"",ImageURL:"",Weight:0}):1===c&&a.questions.TeacherQuestions[b].Answers.push({Text:"",TextEN:"",ImageURL:"",Weight:0})},a.createEval=function(c){a.evaluation=c,a.evaluation.CourseQuestions=a.questions.CourseQuestions,a.evaluation.TeacherQuestions=a.questions.TeacherQuestions,d.createTemplate(a.evaluation).success(function(){console.log("Template successfully created."),b.path("/admin")}).error(function(a,b,c){console.log("Template creation error, status: "+b+", Headers:"),console.log(c)})}}]),angular.module("evaluationApp").controller("EvalResultsController",["$scope","$location","$routeParams","UserService","TemplateService",function(a,b,c,d,e){var f=c.courseID,g=c.semester,h=c.evalID,i=[];a.templateTitle="",a.courseName="",a.courseEvaluationResult={},e.getEvaluationByID(h).success(function(b){console.log("Got the evaluations.."),console.log(b),i=b,a.templateTitle=i.TemplateTitle;for(var c=0;c<i.Courses.length;c++)i.Courses[c].CourseID===f&&i.Courses[c].Semester===g&&(a.courseEvaluationResult=i.Courses[c],a.courseName=a.courseEvaluationResult.CourseName);console.log(a.courseEvaluationResult)})}]),angular.module("evaluationApp").controller("LoginController",["$scope","$location","LoginService",function(a,b,c){a.username="",a.token="",a.logIn=function(a,d){c.logIn(a,d).success(function(a){b.path("admin"===a.User.Role?"/admin":"/student")}).error(function(a,b,c){console.log("Login error, status: "+b+", Headers:"),console.log(c)})}}]),angular.module("evaluationApp").controller("StudentController",["$scope","$location","TemplateService",function(a,b,c){c.getEvaluationsForStudent().success(function(b){a.evaluations=b,console.log(b)}).error(function(a,b,c){console.log("Get Evaluations For Student Error, status: "+b+", Headers:"),console.log(c)})}]),angular.module("evaluationApp").controller("TestController",["$scope",function(a){a.username="Ragnar"}]),angular.module("evaluationApp").directive("evaluationQuestion",function(){return{restrict:"E",templateUrl:function(a,b){return"src/Directives/evaluation-"+b.type+"-question.html"}}}),angular.module("evaluationApp").filter("SingleMultipleQuestionFilter",function(){return function(a){var b=[];return angular.forEach(a,function(a){("single"===a.Type||"multiple"===a.Type)&&b.push(a)}),b}}),angular.module("evaluationApp").filter("TextQuestionFilter",function(){return function(a){var b=[];return angular.forEach(a,function(a){"text"===a.Type&&b.push(a)}),b}}),angular.module("evaluationApp").factory("LoginService",["$http","UserService",function(a,b){return{logIn:function(c,d){var e={user:c,pass:d};return a({method:"POST",url:"http://dispatch.ru.is/demo/api/v1/login",data:e}).success(function(a){console.log("Logged in!"),console.dir(a),b.setToken(a.Token),b.setUsername(a.User.Username),console.log("getToken: "+b.getToken())}).error(function(){console.log("Log in error!")})}}}]),angular.module("evaluationApp").factory("TemplateService",["$http","UserService",function(a,b){var c="http://dispatch.ru.is/demo/api/v1/";return{createTemplate:function(d){var e=b.getToken();return console.log("Using token: "+e),a({method:"POST",url:c+"evaluationtemplates",data:d,headers:{Authorization:"Basic "+e}})},getTemplates:function(){var d=b.getToken();return console.log("Using token: "+d),a({method:"GET",url:c+"evaluationtemplates",data:null,headers:{Authorization:"Basic "+d}})},getTemplateByID:function(d){var e=b.getToken();return console.log("Using token: "+e),a({method:"GET",url:c+"evaluationtemplates/"+d,data:null,headers:{Authorization:"Basic "+e}})},addEvaluation:function(d,e,f){var g=b.getToken();return console.log("Using token: "+g),a({method:"POST",url:c+"evaluations",data:{TemplateID:d,StartDate:e,EndDate:f},headers:{Authorization:"Basic "+g}})},getEvaluations:function(){var d=b.getToken();return console.log("Using token: "+d),a({method:"GET",url:c+"evaluations",data:null,headers:{Authorization:"Basic "+d}})},getEvaluationByID:function(d){var e=b.getToken();return console.log("Using token: "+e),a({method:"GET",url:c+"evaluations/"+d,data:null,headers:{Authorization:"Basic "+e}})},getCoursesForStudent:function(){var d=b.getToken();return console.log("Using token: "+d),a({method:"GET",url:c+"my/courses",data:null,headers:{Authorization:"Basic "+d}})},getEvaluationsForStudent:function(){var d=b.getToken();return console.log("Using token: "+d),a({method:"GET",url:c+"my/evaluations",data:null,headers:{Authorization:"Basic "+d}})},getTeachersForCourse:function(d,e){var f=b.getToken();return console.log("Using token: "+f),a({method:"GET",url:c+"courses/"+d+"/"+e+"/teachers",data:null,headers:{Authorization:"Basic "+f}})},getEvaluationForCourseByEvalID:function(d,e,f){var g=b.getToken();return console.log("Using token: "+g),a({method:"GET",url:c+"courses/"+d+"/"+e+"/evaluations/"+f,data:null,headers:{Authorization:"Basic "+g}})},saveAnswersToEvaluationInCourse:function(d,e,f,g){var h=b.getToken();return console.log("Using token: "+h),a({method:"POST",url:c+"courses/"+d+"/"+e+"/evaluations/"+f,data:g,headers:{Authorization:"Basic "+h}})}}}]),angular.module("evaluationApp").factory("UserService",[function(){var a="",b="",c="";return{setToken:function(a){b=a},getToken:function(){return console.log("Inside getToken: "+b),b},setUsername:function(b){a=b},getUsername:function(){return a},setRole:function(a){c=a},getRole:function(){return c}}}]);